import mongoose from 'mongoose';
import { Document } from 'mongoose';
import Istatus from '../interfaces/itemstatus';
import DirStatus from '../interfaces/dirstatus';

export interface IItem extends Document {
  _id: mongoose.Types.ObjectId,
  id: string,
  lamazon: string,
  lsupplier: string,
  bsr: number,
  fba: boolean,
  expression: boolean,
  amazon: number,
  width: number,
  height: number,
  length: number,
  weight: number,
  supplier: number,
  reffee: number,
  fbafee: number,
  fbaamount: number,
  fbalink: string,
  delivery: number,
  icomment: string,
  createdat: Date,
  createdby: mongoose.Types.ObjectId,
  status: number,
  checkedby: mongoose.Types.ObjectId, 
  checkednotes: string,
  checkedat: Date,
  managerFine: number,
  managerFineComment: string,
  supervisorFine: number,
  dirdecision: number,
  dircheckedby: mongoose.Types.ObjectId,
  buyer: mongoose.Types.ObjectId,
  buyerscomment: string,
  paidat: Date,
  paidby: mongoose.Types.ObjectId,
  images: string[], 
  amazonDescription: string,
  amazonDetail: string, 
  amazonTitle: string
}

const itemSchema = new mongoose.Schema({
  _id: mongoose.Types.ObjectId,
  id: { type: String, reqierd: true, unique: true, dropDups: true  },
  lamazon: { type: String, reqierd: false },
  lsupplier: { type: String, reqierd: false },
  bsr: { type: Number, reqierd: false },
  fba: { type: Boolean, default: false },
  express: { type: Boolean, default: false },
  amazon: { type: Number, reqierd: false },
  height:{ type: Number, reqierd: false },
  width:{ type: Number, reqierd: false },
  length:{ type: Number, reqierd: false },
  weight: { type: Number, reqierd: false },
  supplier: { type: Number, reqierd: false },
  reffee: { type: Number, reqierd: false },
  fbafee: { type: Number, reqierd: false },
  fbaamount:{ type: Number, reqierd: false }, 
  fbalink: { type: String, reqierd: false }, 
  delivery: { type: Number, reqierd: false },
  icomment: { type: String, reqierd: false },
  createdat: { type: Date, reqierd: true },
  createdby: { type: mongoose.Types.ObjectId, ref: 'users', reqierd: true },
  status: { type: Number, reqierd: false,default: Istatus.newitem },
  checkedby: { type: mongoose.Types.ObjectId, ref: 'users', reqierd: false },
  checkednotes: { type: String, reqierd: false },
  checkedat: { type: Date, reqierd: true },
  // Data whent the payment was made.
  managerFine: { type: Number, required: false},
  managerFineComment: { type: String, reqierd: false },
  supervisorFine: { type: Number, required: false},
  supervisorFineComment: { type: String, reqierd: false },
  dirdecision: { type: Number, reqierd: false, default: DirStatus.newitem },
  dircheckedby: { type: mongoose.Types.ObjectId, ref: 'users', reqierd: false },
  buyer: { type: mongoose.Types.ObjectId, ref: 'users', reqierd: false }, 
  buyerscomment: { type: String, reqierd: false },
  paidat: { type: Date, reqierd: false },
  //Who made this payment.
  paidby:  { type: mongoose.Types.ObjectId, ref: 'users', reqierd: false },
  images: { type: Array },
  amazonDescription: { type: String, reqierd: false }, 
  amazonDetail:{ type: String, reqierd: false }, 
  amazonTitle: { type: String, reqierd: false },  
});

export default mongoose.model<IItem>('items', itemSchema);